<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gilab.wjj.persistence.mapper.BasicLedgerMapper">
    <select id="selectBasicLedger" resultMap="BasicLedgerMap">
        select
        id,
        contractId,
        contractNo,
        beneficiaryId,
        calFormula,
        planPayDate,
        planPayCountPre,
        planPayCountPost,
        actualPayDate,
        actualPayCount,
        payStatus,
        taxRate,
        rentMonthMode
        from finance_basic_ledger
        where id = #{id,typeHandler=LongTypeHandler}
    </select>


        <select id="getLedger" resultMap="BasicLedgerMap">
                select * from finance_basic_ledger where contractId = #{contractId,typeHandler=LongTypeHandler}
        </select>

        <insert id="batchUpdateLedgers" parameterType="java.util.List">
          <foreach collection="list" item="item" index="index" separator=" ">
                  update
                    finance_basic_ledger
                  set
                    actualPayDate = #{item.actualPayDate,typeHandler=TimestampLongHandler},
                    payStatus = #{item.payStatus, javaType=PayStatus, typeHandler=PayStatusHandler},
                    actualPayCount=#{item.actualPayCount}
                  where
                  planPayDate=#{item.planPayDate,typeHandler=TimestampLongHandler}
                  and contractNo = #{item.contractNo};
          </foreach>

        </insert>

    <select id="selectBasicLedgerWithContract" resultMap="BasicLedgerMap">
        select
        id,
        contractId,
        contractNo,
        beneficiaryId,
        calFormula,
        planPayDate,
        planPayCountPre,
        planPayCountPost,
        actualPayDate,
        actualPayCount,
        payStatus,
        taxRate,
        rentMonthMode
        from finance_basic_ledger
        where contractId = #{contractId,typeHandler=LongTypeHandler}
    </select>

    <select id="selectBasicLedgerWithContractNo" resultMap="BasicLedgerMap">
        select
        id,
        contractId,
        contractNo,
        beneficiaryId,
        calFormula,
        planPayDate,
        planPayCountPre,
        planPayCountPost,
        actualPayDate,
        actualPayCount,
        payStatus,
        taxRate,
        rentMonthMode
        from finance_basic_ledger
        where contractNo = #{contractNo}
    </select>

    <insert id="insertBasicLedger" useGeneratedKeys="true" keyProperty="id">
        insert into finance_basic_ledger (
        contractId,
        contractNo,
        beneficiaryId,
        calFormula,
        planPayDate,
        planPayCountPre,
        planPayCountPost,
        actualPayDate,
        actualPayCount,
        payStatus,
        taxRate,
        rentMonthMode
        )
        values (
        #{contractId,typeHandler=LongTypeHandler},
        #{contractNo},
        #{beneficiaryId,typeHandler=LongTypeHandler},
        #{calFormula},
        #{planPayDate,typeHandler=TimestampLongHandler},
        #{planPayCountPre},
        #{planPayCountPost},
        #{actualPayDate,typeHandler=TimestampLongHandler},
        #{actualPayCount},
        #{payStatus,typeHandler=PayStatusHandler},
        #{taxRate},
        #{rentMonthMode,typeHandler=RentMonthModeHandler}
        )
    </insert>

    <insert id="batchInsertBasicLedgers" parameterType="java.util.List">
    insert into finance_basic_ledger (
    contractId,
    contractNo,
    beneficiaryId,
    calFormula,
    planPayDate,
    planPayCountPre,
    planPayCountPost,
    actualPayDate,
    actualPayCount,
    payStatus,
    taxRate,
    rentMonthMode
    )
    values
    <foreach collection="list" item="item" index="index" separator=",">
        (
        #{item.contractId,typeHandler=LongTypeHandler},
        #{item.contractNo},
        #{item.beneficiaryId,typeHandler=LongTypeHandler},
        #{item.calFormula},
        #{item.planPayDate,typeHandler=TimestampLongHandler},
        #{item.planPayCountPre},
        #{item.planPayCountPost},
        #{item.actualPayDate,typeHandler=TimestampLongHandler},
        #{item.actualPayCount},
        #{item.payStatus,typeHandler=PayStatusHandler},
        #{item.taxRate},
        #{item.rentMonthMode,typeHandler=RentMonthModeHandler}
        )
    </foreach>
    </insert>

    <select id="getLedgerWithFilter" resultType="map">
      select * FROM (select * from finance_basic_ledger WHERE 1=1
        <if test="contractNo !=null">
            and  contractNo = #{contractNo}
        </if>

      ) AS l LEFT JOIN finance_contract c on l.contractNo=c.contractNo LEFT JOIN finance_merchants m ON c.beneficiary=m.id;
    </select>

    <resultMap id="BasicLedgerMap" type="BasicLedger">
        <id property="id" column="id"/>
        <result property="contractId" column="contractId"/>
        <result property="contractNo" column="contractNo"/>
        <result property="beneficiaryId" column="beneficiaryId"/>
        <result property="calFormula" column="calFormula"/>
        <result property="planPayDate" column="planPayDate" typeHandler="TimestampLongHandler"/>
        <result property="planPayCountPre" column="planPayCountPre"/>
        <result property="planPayCountPost" column="planPayCountPost"/>
        <result property="actualPayDate" column="actualPayDate" typeHandler="TimestampLongHandler"/>
        <result property="actualPayCount" column="actualPayCount"/>
        <result property="payStatus" column="payStatus" javaType="PayStatus" typeHandler="PayStatusHandler"/>
        <result property="taxRate" column="taxRate"/>
        <result property="rentMonthMode" column="rentMonthMode" javaType="RentMonthMode" typeHandler="RentMonthModeHandler"/>
    </resultMap>
</mapper>